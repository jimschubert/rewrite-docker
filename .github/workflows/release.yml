name: Release

on:
  release:
    types: [created]

permissions:
  contents: write
  pages: write
  id-token: write

env:
  JAVA_VERSION: 17
  GRADLE_VERSION: 8.8

jobs:
  publish:
    name: Build then JitPack
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: ${{ env.JAVA_VERSION }}

      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}

      - name: Build with Gradle
        run: ./gradlew build -Pversion=${{ github.event.release.tag_name }}

      - name: Upload Assets to Release
        uses: AButler/upload-release-assets@v3.0
        with:
          files: ./build/libs/*.jar
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the release version, removing the v from the tag
        id: get_version
        run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT

      - name: Request release from JitPack to trigger build
        run: |
          JITPACK_URL="https://jitpack.io/com/github/jimschubert/rewrite-docker/${{ steps.get_version.outputs.RELEASE_VERSION }}/"
          curl -X POST -s -m 30 ${JITPACK_URL} || true
